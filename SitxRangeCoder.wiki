#summary The range coder used in the sitx format

= Overview =

The range coder used in all sitx compressors is functionally similar to Dmitry Subbotin's carryless rangecoder from the PPMd project.

== Initialization ==

{{{
low=0;
code=0;
range=-1;
}}}

== Fetching a symbol ==

Here, `freqtable` is an array of symbol frequencies, and `num` is the number of symbols.

{{{
unsigned int totfreq=0;
for(int i=0;i<num;i++) totfreq+=freqtable[i];

range=range/totfreq;
unsigned int tmp=(code-low)/range;

unsigned int cumfreq=0;
unsigned int n=0;
do
{
    cumfreq+=freqtable[n++];
}
while(cumfreq<=tmp);

n=n-1;

range=range*freqtable[n];
low=low+range*(cumfreq-freqtable[n]);

}}}

The index of the decoded symbol is `n`. This is followed by normalization:

== Normalization ==

{{{
while( (low^(low+range))<0x1000000 || range<0x10000 )
{
    if( (low^(low+range))>=0x1000000 ) range=-low&0xffff;

    code=(code<<8) | NextByteFromStream();
    range=range<<8;
    low=low<<8;
}
}}}
