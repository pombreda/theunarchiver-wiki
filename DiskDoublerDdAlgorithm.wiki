#summary Reverse-engineered specs for the DD algorithm from DiskDoubler

=Introduction=

DD is a compression algorithm used by the old DiskDoubler application for Mac OS. It compresses the data stream as a series of blocks of variable size.

=Decoding=

==Block header==

Each block starts with a 22-byte header. Its layout is as follows:

|| *Offset* || *Size* || *Meaning* ||
|| 0 || 4 || Uncompressed size ||
|| 4 || 2 || Unknown ||
|| 6 || 2 || Unknown ||
|| 8 || 2 || Compressed size part 1 ||
|| 10 || 2 || Compressed size part 2 ||
|| 12 || 2 || Compressed size part 3 ||
|| 14 || 1 || Flags ||
|| 15 || 1 || Unused? ||
|| 16 || 1 || XOR sum of compressed data part 1 ||
|| 17 || 1 || XOR sum of compressed data part 2 ||
|| 18 || 1 || XOR sum of compressed data part 3 ||
|| 19 || 1 || XOR sum of uncompressed data ||
|| 20 || 1 || Unused? ||
|| 21 || 1 || XOR sum of preceeding 21 bytes ||

==Compressed bit stream==

==Steam footer==

list of offsets for all the blocks. The exact format is not yet determined.